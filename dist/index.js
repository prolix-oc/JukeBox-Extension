(()=>{"use strict";var e,t,n={208:(e,t,n)=>{n.d(t,{A:()=>i});var r=n(601),o=n.n(r),a=n(314),c=n.n(a)()(o());c.push([e.id,".field-sizing {\n    field-sizing: content;\n}\n\n#roon_jukebox_settings small {\n    color: var(--SmartThemeQuoteColor);\n    font-style: italic;\n    display: block;\n    margin-top: 4px;\n}\n\n#roon_jukebox_settings .radio_group label {\n    margin-bottom: 8px;\n}\n\n#roon_jukebox_settings hr {\n    margin: 16px 0;\n    border: none;\n    border-top: 1px solid var(--SmartThemeBorderColor);\n}",""]);const i=c},314:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var c={};if(r)for(var i=0;i<this.length;i++){var s=this[i][0];null!=s&&(c[s]=!0)}for(var l=0;l<e.length;l++){var u=[].concat(e[l]);r&&c[u[0]]||(void 0!==a&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=a),n&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=n):u[2]=n),o&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=o):u[4]="".concat(o)),t.push(u))}},t}},601:e=>{e.exports=function(e){return e[1]}},72:e=>{var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var a={},c=[],i=0;i<e.length;i++){var s=e[i],l=r.base?s[0]+r.base:s[0],u=a[l]||0,p="".concat(l," ").concat(u);a[l]=u+1;var d=n(p),y={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==d)t[d].references++,t[d].updater(y);else{var h=o(y,r);r.byIndex=i,t.splice(i,0,{identifier:p,updater:h,references:1})}c.push(p)}return c}function o(e,t){var n=t.domAPI(t);n.update(e);return function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var c=0;c<a.length;c++){var i=n(a[c]);t[i].references--}for(var s=r(e,o),l=0;l<a.length;l++){var u=n(a[l]);0===t[u].references&&(t[u].updater(),t.splice(u,1))}a=s}}},659:e=>{var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},540:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},56:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},113:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},r={};function o(e){var t=r[e];if(void 0!==t)return t.exports;var a=r[e]={id:e,exports:{}};return n[e](a,a.exports,o),a.exports}o.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return o.d(t,{a:t}),t},o.d=(e,t)=>{for(var n in t)o.o(t,n)&&!o.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),o.nc=void 0,function(e){e[e.None=-1]="None",e[e.AfterPrompt=0]="AfterPrompt",e[e.InChat=1]="InChat",e[e.BeforePrompt=2]="BeforePrompt"}(e||(e={})),function(e){e[e.System=0]="System",e[e.User=1]="User",e[e.Assistant=2]="Assistant"}(t||(t={}));const a="roon-jukebox",c="roon_inject",i="/api/plugins/roon-lyrics",s={PROBE:`${i}/probe`,CURRENT_TRACK:`${i}/current-track`,CURRENT_LYRICS:`${i}/current-lyrics`,SEARCH_LYRICS:`${i}/search-lyrics`},l={getCurrentTrack:Object.freeze({$schema:"http://json-schema.org/draft-04/schema#",type:"object",properties:{},required:[]}),getCurrentLyrics:Object.freeze({$schema:"http://json-schema.org/draft-04/schema#",type:"object",properties:{},required:[]}),searchLyrics:Object.freeze({$schema:"http://json-schema.org/draft-04/schema#",type:"object",properties:{song:{type:"string",description:"The name of the song to search for lyrics."},artist:{type:"string",description:"The name of the artist."}},required:["song","artist"]}),checkConnection:Object.freeze({$schema:"http://json-schema.org/draft-04/schema#",type:"object",properties:{},required:[]})},u={getCurrentTrack:async function(){try{const e=await fetch(s.CURRENT_TRACK);if(!e.ok)return"JukeBox plugin is not available or not responding.";const t=await e.json();return t.success&&t.track?t.track:"No track currently playing on Roon."}catch(e){return console.error("Error fetching current track:",e),"Error fetching current track. See console for details."}},getCurrentLyrics:async function(){try{const e=await fetch(s.CURRENT_LYRICS);if(!e.ok)return"JukeBox plugin is not available or not responding.";const t=await e.json();return t.success?t:"No lyrics available for the current track."}catch(e){return console.error("Error fetching current lyrics:",e),"Error fetching current lyrics. See console for details."}},searchLyrics:async function({song:e,artist:t}){try{const n={song:e,artist:t},r=await fetch(s.SEARCH_LYRICS,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)});if(!r.ok)return"JukeBox plugin is not available or not responding.";const o=await r.json();return o.success?o:`No lyrics found for "${e}" by ${t}.`}catch(e){return console.error("Error searching lyrics:",e),"Error searching lyrics. See console for details."}},checkConnection:async function(){try{const e=await fetch(s.PROBE);if(!e.ok)return"JukeBox plugin is not available.";return await e.json()}catch(e){return console.error("Error checking connection:",e),"Error checking JukeBox connection. See console for details."}}},p={getCurrentTrack:{name:"RoonGetCurrentTrack",displayName:"Roon: Get Current Track",description:"Gets the current track playing on Roon. Call when you need to display the current track information.",parameters:l.getCurrentTrack,action:u.getCurrentTrack,shouldRegister:d},getCurrentLyrics:{name:"RoonGetCurrentLyrics",displayName:"Roon: Get Current Lyrics",description:"Gets lyrics for the currently playing track on Roon. Call when you need to display lyrics for the current track.",parameters:l.getCurrentLyrics,action:u.getCurrentLyrics,shouldRegister:d},searchLyrics:{name:"RoonSearchLyrics",displayName:"Roon: Search Lyrics",description:"Searches for lyrics of a specific song and artist. Call when you need to find lyrics for a particular track.",parameters:l.searchLyrics,action:u.searchLyrics,shouldRegister:d},checkConnection:{name:"RoonCheckConnection",displayName:"Roon: Check Connection",description:"Checks if the Roon plugin is connected and operational. Call when you need to verify Roon connectivity.",parameters:l.checkConnection,action:u.checkConnection,shouldRegister:d}};async function d(){return!0}function y(){const e=SillyTavern.getContext(),t=C();for(const[n,r]of Object.entries(p))t[n]?e.registerFunctionTool(r):e.unregisterFunctionTool(r.name)}const{setExtensionPrompt:h,substituteParamsExtended:f}=SillyTavern.getContext();function m(){h(c,"",e.None,0)}async function g(){try{const e=await fetch(s.PROBE);if(!e.ok)return!1;return"connected"===(await e.json()).status}catch(e){return console.error("JukeBox plugin not available:",e),!1}}async function v(){m();const t=C();if(!t.template||t.position===e.None)return;if(await g())try{const e=await async function(){try{const e=await fetch(s.CURRENT_TRACK);if(!e.ok)return null;const t=await e.json();return t.success?t:null}catch(e){return console.error("Error fetching current track:",e),null}}();if(!e||!e.track)return void console.log("No track currently playing on Roon");console.log("Currently playing Roon track:",e.track);let n=null;t.includeLyrics&&(n=await async function(){try{const e=await fetch(s.CURRENT_LYRICS);if(!e.ok)return null;const t=await e.json();return t.success?t:null}catch(e){return console.error("Error fetching lyrics:",e),null}}(),console.log("Fetched lyrics:",n));const r=function(e,t){const n={song:e.song||"",artist:e.artist||"",album:e.album||"",zone:e.zoneName||"",status:e.playbackStatus||""};t&&(n.lyrics=t.plainLyrics||"",n.syncedLyrics=t.syncedLyrics||"",n.instrumental=t.instrumental?"true":"false");return n}(e.track,n?.lyrics),o=f(t.template,r);h(c,o,t.position,t.depth,t.scan,t.role)}catch(e){console.error("Error setting current track:",e)}else console.log("JukeBox plugin not connected or available")}const{t:b,saveSettingsDebounced:k}=SillyTavern.getContext(),_=Object.freeze({template:"[{{user}} is listening to {{song}} by {{artist}} from {{album}} on Roon in {{zone}}]",position:e.InChat,role:t.System,depth:1,scan:!0,includeLyrics:!1,pollInterval:5e3,getCurrentTrack:!0,getCurrentLyrics:!0,searchLyrics:!0,checkConnection:!1});function C(){const e=SillyTavern.getContext().extensionSettings;e[a]||(e[a]=structuredClone(_));for(const t in _)void 0===e[a][t]&&(e[a][t]=_[t]);return e[a]}var x=o(72),S=o.n(x),L=o(825),I=o.n(L),T=o(659),w=o.n(T),E=o(56),R=o.n(E),j=o(540),B=o.n(j),N=o(113),A=o.n(N),P=o(208),J={};J.styleTagTransform=A(),J.setAttributes=R(),J.insert=w().bind(null,"head"),J.domAPI=I(),J.insertStyleElement=B();S()(P.A,J);P.A&&P.A.locals&&P.A.locals;let O=null;async function M(){await v()}!async function(){const e=SillyTavern.getContext();!function(e){const t=document.getElementById("roon_jukebox_container")??document.getElementById("extensions_settings2");if(!t)return;const n=document.createElement("template");n.innerHTML='<div id="roon_jukebox_settings"> <div class="inline-drawer"> <div class="inline-drawer-toggle inline-drawer-header"> <b> <span>Roon JukeBox</span> </b> <div class="inline-drawer-icon fa-solid fa-circle-chevron-down down"></div> </div> <div class="inline-drawer-content"> <div> <label for="roon_template">Injection Template</label> <textarea id="roon_template" class="text_pole textarea_compact" rows="3" placeholder="Template for injecting music information into prompts. Available variables: {{song}}, {{artist}}, {{album}}, {{zone}}, {{status}}, {{lyrics}}, {{syncedLyrics}}, {{instrumental}}"></textarea> <small>Available variables: {{song}}, {{artist}}, {{album}}, {{zone}}, {{status}}, {{lyrics}}, {{syncedLyrics}}, {{instrumental}}</small> </div> <div> <label class="checkbox_label" for="roon_include_lyrics"> <input id="roon_include_lyrics" type="checkbox"/> <span>Include Lyrics in Context</span> </label> <small>When enabled, lyrics will be fetched and included in the {{lyrics}} variable</small> </div> <div> <label for="roon_poll_interval">Polling Interval (ms)</label> <input type="number" id="roon_poll_interval" class="text_pole" min="1000" max="30000" step="1000"/> <small>How often to check for track changes (minimum 1000ms)</small> </div> <div> <label class="checkbox_label" for="roon_scan"> <input id="roon_scan" type="checkbox"/> <span>Include in World Info Scanning</span> </label> </div> <div> <label for="roon_position">Injection Position</label> <div class="radio_group"> <label> <input type="radio" name="roon_position" value="-1"/> <span data-i18n="None (not injected)">None (not injected)</span> </label> <label> <input type="radio" name="roon_position" value="2"/> <span data-i18n="Before Main Prompt / Story String">Before Main Prompt / Story String</span> </label> <label> <input type="radio" name="roon_position" value="0"/> <span data-i18n="After Main Prompt / Story String">After Main Prompt / Story String</span> </label> <label class="flex-container alignItemsCenter" title="How many messages before the current end of the chat." data-i18n="[title]How many messages before the current end of the chat."> <input type="radio" name="roon_position" value="1"/> <span data-i18n="In-chat @ Depth">In-chat @ Depth</span> <input id="roon_depth" class="text_pole widthUnset" type="number" min="0" max="999"/> <span data-i18n="as">as</span> <select id="roon_role" class="text_pole widthNatural"> <option value="0" data-i18n="System">System</option> <option value="1" data-i18n="User">User</option> <option value="2" data-i18n="Assistant">Assistant</option> </select> </label> </div> </div> <hr> <div> <b>Function tools:</b> <label class="checkbox_label" for="roon_tool_get_current_track"> <input id="roon_tool_get_current_track" type="checkbox"/> <span>Get Current Track</span> </label> <label class="checkbox_label" for="roon_tool_get_current_lyrics"> <input id="roon_tool_get_current_lyrics" type="checkbox"/> <span>Get Current Lyrics</span> </label> <label class="checkbox_label" for="roon_tool_search_lyrics"> <input id="roon_tool_search_lyrics" type="checkbox"/> <span>Search Lyrics</span> </label> <label class="checkbox_label" for="roon_tool_check_connection"> <input id="roon_tool_check_connection" type="checkbox"/> <span>Check Connection</span> </label> </div> <hr> <div class="justifyCenter"> <small><em>Requires the JukeBox SillyTavern server plugin to be installed and enabled</em></small> </div> </div> </div> </div>',t.appendChild(n.content);const r={template:document.getElementById("roon_template"),role:document.getElementById("roon_role"),position:Array.from(document.getElementsByName("roon_position")),depth:document.getElementById("roon_depth"),scan:document.getElementById("roon_scan"),includeLyrics:document.getElementById("roon_include_lyrics"),pollInterval:document.getElementById("roon_poll_interval"),tools:{getCurrentTrack:document.getElementById("roon_tool_get_current_track"),getCurrentLyrics:document.getElementById("roon_tool_get_current_lyrics"),searchLyrics:document.getElementById("roon_tool_search_lyrics"),checkConnection:document.getElementById("roon_tool_check_connection")}};r.template.value=e.template,r.role.value=e.role.toString(),r.position.forEach((t=>{t.checked=e.position===parseInt(t.value)})),r.depth.value=e.depth.toString(),r.scan.checked=e.scan,r.includeLyrics.checked=e.includeLyrics,r.pollInterval.value=e.pollInterval.toString(),r.tools.getCurrentTrack.checked=e.getCurrentTrack,r.tools.getCurrentLyrics.checked=e.getCurrentLyrics,r.tools.searchLyrics.checked=e.searchLyrics,r.tools.checkConnection.checked=e.checkConnection;const o=(t,n,r,o)=>{t.addEventListener("input",(()=>{const a=t instanceof HTMLInputElement&&"checkbox"===t.type?t.checked:t.value;e[n]=r?r(a):a,o&&o(),k()}))};o(r.template,"template",(e=>e),m),o(r.role,"role",(e=>parseInt(e)),m),o(r.depth,"depth",(e=>parseInt(e)),m),o(r.scan,"scan",(e=>e),m),o(r.includeLyrics,"includeLyrics",(e=>e)),o(r.pollInterval,"pollInterval",(e=>parseInt(e))),o(r.tools.getCurrentTrack,"getCurrentTrack",(e=>e),y),o(r.tools.getCurrentLyrics,"getCurrentLyrics",(e=>e),y),o(r.tools.searchLyrics,"searchLyrics",(e=>e),y),o(r.tools.checkConnection,"checkConnection",(e=>e),y),r.position.forEach((t=>{t.addEventListener("input",(t=>{e.position=parseInt(t.target.value),m(),k()}))}))}(C()),globalThis.roon_setCurrentTrack=M,y(),await async function(){const e=C();if(O&&clearInterval(O),-1===e.position)return;await g()?(console.log(`Starting JukeBox polling every ${e.pollInterval}ms`),O=window.setInterval((async()=>{try{await v()}catch(e){console.error("Error during polling update:",e)}}),e.pollInterval),await v()):console.log("JukeBox plugin not available, skipping polling setup")}(),e.saveSettingsDebounced(),window.addEventListener("beforeunload",(()=>{O&&(clearInterval(O),O=null,console.log("Stopped JukeBox polling"))})),console.log("JukeBox extension initialized")}()})();